name: Release

on:
  push:
    tags:
      - 'v*'

jobs:  
  build-android:      
    name: Build Android 
    runs-on: macos-latest 

    steps:
        #1 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

        #2 Setup Java
      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'

        #3 Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.5'
          channel: 'stable'

        #4 Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

        #5 Setup Keystore
      - name: Create Keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > app/luci_mobile_keystore.jks
          echo "${{ secrets.ANDROID_KEY_PROPERTIES_BASE64 }}" | base64 --decode > key.properties
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          ANDROID_KEY_PROPERTIES_BASE64: ${{ secrets.ANDROID_KEY_PROPERTIES_BASE64 }}
        working-directory: android
      
      - name: Build APK
        run: flutter build apk --release
      
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: luci-mobile-apk
          path: build/app/outputs/flutter-apk/app-release.apk

#  build-ios:
#    runs-on: macos-latest
#    steps:
#      - uses: actions/checkout@v4
#      
#      - name: Setup Flutter
#        uses: subosito/flutter-action@v2
#        with:
#          flutter-version: '3.32.5'
#          channel: 'stable'
#      
#      - name: Install dependencies
#        run: flutter pub get
#      
#      - name: Setup iOS Code Signing
#        run: |
#          # Create keychain
#          security create-keychain -p "" build.keychain
#          security default-keychain -s build.keychain
#          security unlock-keychain -p "" build.keychain
#          security set-keychain-settings build.keychain
#          
#          # Import certificate
#          echo ${{ secrets.IOS_CERTIFICATE_BASE64 }} | base64 -d > certificate.p12
#          security import certificate.p12 -k build.keychain -P ${{ secrets.IOS_CERTIFICATE_PASSWORD }} -T /usr/bin/codesign
#          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "" build.keychain
#          
#          # Install provisioning profile
#          echo ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }} | base64 -d > profile.mobileprovision
#          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
#          cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
#          
#          # Set up code signing identity
#          /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier ${{ secrets.IOS_APP_ID }}" ios/Runner/Info.plist
#      
#      - name: Build iOS
#        run: flutter build ios --release
#      
#      - name: Upload iOS build
#        uses: actions/upload-artifact@v4
#        with:
#          name: luci-mobile-ios
#          path: build/ios/iphoneos/Runner.app

  create-release:
    needs: [build-android]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: luci-mobile-apk
          path: dist/
      
#      - name: Download iOS build
#        uses: actions/download-artifact@v4
#        with:
#          name: luci-mobile-ios
#          path: dist/
      
      - name: Generate Changelog
        id: changelog
        run: |
          # Get the current tag
          CURRENT_TAG="${{ github.ref_name }}"
          
          # Get the previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          
          if [ -z "$PREVIOUS_TAG" ]; then
            # If no previous tag, get all commits
            CHANGELOG=$(git log --oneline --pretty=format:"- %s" --no-merges)
          else
            # Get commits between previous and current tag
            CHANGELOG=$(git log --oneline --pretty=format:"- %s" --no-merges ${PREVIOUS_TAG}..${CURRENT_TAG})
          fi
          
          # Escape newlines for GitHub Actions
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: LuCI Mobile ${{ github.ref_name }}
          body: |
            ## What's New in ${{ github.ref_name }}
            
            ### Changes
            ${{ steps.changelog.outputs.changelog }}
            
            ## Downloads
            
            ### Android
            - APK file attached
            
            ## Installation
            
            1. Download the APK file
            2. Enable "Install from unknown sources" on your Android device
            3. Install the APK
            4. Configure your router settings
            
            ## Requirements
            
            - Android 5.0+ (API level 21+)
            - OpenWrt router with LuCI web interface
            - Network access to your router
          
          draft: false
          prerelease: false
      
      - name: Upload APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/app-release.apk
          asset_name: luci-mobile-v${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive 
